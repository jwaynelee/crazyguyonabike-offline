<project name="cgoab-offline" basedir="." default="main">

	<property name="launch4j.dir" value="C:/libs/launch4j" />
	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />

	<!-- versions & build number (date) -->
	<property name="version" value="0.1.1" />
	<tstamp>
		<format pattern="yyyy-MM-dd" property="TODAY" />
	</tstamp>
	<property name="build.date" value="${TODAY}" />

	<property name="main.jar.name" value="${ant.project.name}.${version}.jar" />
	<property name="main.class" value="com.cgoab.offline.Application" />
	<property name="test.jar.name" value="${ant.project.name}.${version}.tests.jar" />

	<property name="src.dir" value="src" />
	<property name="tests.dir" value="tests" />
	<property name="lib.dir" value="libs" />
	<property name="swt.dir" value="libsswt" />
	<property name="scripts.dir" value="scripts" />

	<property name="build.dir" value="build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="main.classes.dir" value="${classes.dir}/main" />
	<property name="tests.classes.dir" value="${classes.dir}/tests" />
	<property name="temp.dir" value="${build.dir}/temp" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="release.dir" value="${build.dir}/release" />
	<property name="swt.version" value="3.6.1" />

	<condition property="swtjar" value="swt-${swt.version}-win32.jar">
		<equals arg1="${sun.arch.data.model}" arg2="32" />
	</condition>
	<condition property="swtjar" value="swt-${swt.version}-win32_64.jar">
		<equals arg1="${sun.arch.data.model}" arg2="64" />
	</condition>

	<path id="classpath">
		<fileset dir="${lib.dir}" includes="*.jar" />
		<!-- for compiling it doesn't matter which SWT jar we use -->
		<fileset dir="${swt.dir}" includes="${swtjar}" />
	</path>

	<path id="classpath.test">
		<path refid="classpath" />
		<fileset dir="testlibs" includes="*.jar" />
		<pathelement path="${jar.dir}/${main.jar.name}" />
	</path>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile-main">
		<mkdir dir="${main.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${main.classes.dir}" debug="yes" classpathref="classpath" />
	</target>

	<target name="jar-main" depends="compile-main">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${main.jar.name}" basedir="${main.classes.dir}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Title" value="${ant.project.name}" />
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Implementation-Title" value="${ant.project.name}" />
				<attribute name="Implementation-Version" value="${version} (build ${build.date})" />
			</manifest>
			<fileset dir="${src.dir}" excludes="*.java" />
			<!-- .log, .properties etc -->
		</jar>
	</target>

	<target name="compile-tests" depends="jar-main">
		<mkdir dir="${tests.classes.dir}" />
		<javac srcdir="${tests.dir}" destdir="${tests.classes.dir}" debug="yes" classpathref="classpath.test" />
	</target>

	<target name="jar-tests" depends="compile-tests">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${test.jar.name}" basedir="${tests.classes.dir}">
			<fileset dir="${tests.dir}" excludes="*.java" />
			<!-- .log, .properties etc -->
		</jar>
	</target>

	<target name="run-tests" depends="jar-tests">
		<mkdir dir="${temp.dir}/testoutput" />
		<junit printsummary="yes">
			<classpath refid="classpath.test" />
			<classpath path="${jar.dir}/${test.jar.name}" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${temp.dir}/testoutput">
				<fileset dir="${tests.dir}">
					<exclude name="testutils/**" />
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<property name="release.zip.name.win" value="${ant.project.name}.${version}-win.zip" />
	<property name="release.zip.name.linux" value="${ant.project.name}.${version}-linux.zip" />
	<property name="release.zip.name.osx" value="${ant.project.name}.${version}-osx.zip" />

	<target name="package-windows" depends="run-tests">
		<launch4j>
			<config headerType="gui" outfile="${jar.dir}/${ant.project.name}.exe" dontWrapJar="true" jarPath="${main.jar.name}" downloadurl="http://www.java.com/download" customprocname="true">
				<classPath mainClass="${main.class}">
					<cp>libs/*</cp>
					<cp>libsswt/swt-3.6.1-win32.jar</cp>
				</classPath>
				<jre minVersion="1.6.0" />
				<versionInfo fileVersion="${version}.0" txtFileVersion="${version}" fileDescription="${version}" Copyright="..." productVersion="${version}.0" txtProductVersion="${version}" productName="${ant.project.name}" internalName="${ant.project.name}" originalFilename="${ant.project.name}.exe" />
			</config>
		</launch4j>
		<launch4j>
			<config headerType="gui" outfile="${jar.dir}/${ant.project.name}_64.exe" dontWrapJar="true" jarPath="${main.jar.name}" downloadurl="http://www.java.com/download" customprocname="true">
				<classPath mainClass="${main.class}">
					<cp>libs/*</cp>
					<cp>libsswt/swt-3.6.1-win32_64.jar</cp>
					<!-- TODO fix! -->
				</classPath>
				<jre minVersion="1.6.0" />
				<versionInfo fileVersion="${version}.0" txtFileVersion="${version}" fileDescription="${version}" Copyright="..." productVersion="${version}.0" txtProductVersion="${version}" productName="${ant.project.name}" internalName="${ant.project.name}" originalFilename="${ant.project.name}.exe" />
			</config>
		</launch4j>
		<mkdir dir="${release.dir}" />
		<zip destfile="${release.dir}/${release.zip.name.win}">
			<fileset dir=".">
				<include name="${lib.dir}/*.jar" />
				<include name="${swt.dir}/*win32*.jar" />
			</fileset>
			<zipfileset dir="${jar.dir}" includes="${main.jar.name}" fullpath="${main.jar.name}" />
			<zipfileset dir="${jar.dir}" includes="${ant.project.name}.exe" fullpath="${ant.project.name}.exe" />
			<zipfileset dir="${jar.dir}" includes="${ant.project.name}_64.exe" fullpath="${ant.project.name}_64.exe" />
		</zip>
	</target>


	<target name="package-linux" depends="run-tests">
		<mkdir dir="${release.dir}" />
		<copy file="${scripts.dir}/cgoab-offline" tofile="${temp.dir}/cgoab-offline">
			<filterchain>
				<replacetokens>
					<token key="MAINJAR" value="${main.jar.name}" />
					<token key="MAINCLASS" value="${main.class}" />
					<token key="SWTVERSION" value="${swt.version}" />
				</replacetokens>
			</filterchain>
		</copy>
		<zip destfile="${release.dir}/${release.zip.name.linux}">
			<!-- main jar in root, libs in /libs, exe in root -->
			<fileset dir=".">
				<include name="${lib.dir}/*.jar" />
				<include name="${swt.dir}/*linux*.jar" />
			</fileset>
			<zipfileset dir="${jar.dir}" includes="${main.jar.name}" fullpath="${main.jar.name}" />
			<zipfileset dir="${temp.dir}" includes="cgoab-offline" fullpath="cgoab-offline" filemode="755" />
		</zip>
	</target>

	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="C:\libs\jarbundler\jarbundler-2.2.0.jar" />

	<target name="package-osx" depends="run-tests">
		<jarbundler dir="${temp.dir}" jvmversion="1.6+" shortname="${ant.project.name}" build="${version} (${build.date})" version="${version}" infostring="${ant.project.name} ${version}" name="${ant.project.name}" mainclass="${main.class}" stubfile="C:\libs\jarbundler\JavaApplicationStub" startonmainthread="true">
			<jarfileset dir="${jar.dir}">
				<include name="${main.jar.name}" />
			</jarfileset>
			<jarfileset dir="${lib.dir}">
				<include name="*.jar" />
			</jarfileset>
			<jarfileset dir="${swt.dir}">
				<include name="swt-3.6.1-osx.jar" />
			</jarfileset>
		</jarbundler>
		<zip destfile="${release.dir}/${release.zip.name.osx}">
			<zipfileset dir="${temp.dir}" includes="${ant.project.name}.app/**" filemode="755" />
		</zip>
	</target>


	<taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="C:\libs\ant-googlecode\ant-googlecode-0.0.2.jar" name="gcupload" />

	<target name="package-all" depends="package-windows,package-linux,package-osx" />

	<target name="upload" depends="package-all">
		<gcupload username="${googlecode.user}" password="${googlecode.password}" projectname="crazyguyonabike-offline" filename="${release.dir}/${release.zip.name.linux}" targetfilename="${release.zip.name.linux}" summary="Version ${version} of ${ant.project.name}" labels="Featured, Type-Package, OpSys-Linux" />
		<gcupload username="${googlecode.user}" password="${googlecode.password}" projectname="crazyguyonabike-offline" filename="${release.dir}/${release.zip.name.win}" targetfilename="${release.zip.name.win}" summary="Version ${version} of ${ant.project.name}" labels="Featured, Type-Package, OpSys-Windows" />
		<gcupload username="${googlecode.user}" password="${googlecode.password}" projectname="crazyguyonabike-offline" filename="${release.dir}/${release.zip.name.osx}" targetfilename="${release.zip.name.osx}" summary="Version ${version} of ${ant.project.name}" labels="Featured, Type-Package, OpSys-OSX" />
	</target>


	<target name="main" depends="clean, package-all" />

</project>